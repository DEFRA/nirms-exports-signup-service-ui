name: 'V1-B$(Date:yyyyMMdd)-$(BuildID)'

parameters:
  - name: forceDevDeploy
    displayName: "Force deployment to DEV"
    type: boolean
    default: false
  - name: deployToSecondary
    displayName: "Select Secondary Region"
    type: string
    default: PRD
    values:
      - None
      - DEV
      - TST
      - PRE
      - PRD
  - name: deployDevSlot
    displayName: "Deploy to DEV Staging Slot?"
    type: boolean
    default: false
  - name: deployTstSlot
    displayName: "Deploy to TST Staging Slot?"
    type: boolean
    default: false
  - name: deployPreSlot
    displayName: "Deploy to Pre-Prod Staging Slot?"
    type: boolean
    default: false
  - name: deployPrdSlot
    displayName: "Deploy to Production Staging Slot?"
    type: boolean
    default: false
  - name: qualityGate
    displayName: "Quality Gate parameters"
    type: object
    default:
      enforceQualityGate: false
      warningVariance: 1
      coverageVariance: 1
      coverageType: 'blocks'
      baseBranch: '$(System.PullRequest.TargetBranch)'
      allowWarningVariance: true
      allowCoverageVariance: true

trigger:
  batch: true
  branches:
    include:
    - 'master'
    - 'dev'
  paths:
    include:
    - src/Defra.Trade.ReMoS.AssuranceService.UI/*
    - test/*

resources:
  repositories:
    - repository: PipelineCommon
      name: DEFRA-TRD/Defra.TRD.Pipeline.Common
      type: git
      ref: features/update-quality-gate-parameters-jb
    - repository: EEHCAutomation
      name: DEFRA-EEHC/Defra.Trade.EEHC.Automation
      type: git
      ref: dev

variables:
  APIName: Defra.Trade.ReMoS.AssuranceService.UI
  UseProductionData: $[ne(variables['environment'], 'dev')]

extends:
  template: /templates/basic-webapp-deploy-pipeline.yaml@PipelineCommon
  parameters:
    forceDevDeploy: ${{ parameters.forceDevDeploy }}
    deployToSecondary: ${{ parameters.deployToSecondary }}
    appName: $(APIName)
    appProject: GC
    appInstanceNumber: $(nc-region-id)01
    buildProjects: 'src\$(APIName)\$(APIName).csproj'
    publishProject: 'src\$(APIName)\$(APIName).csproj'
    publishArguments: '--configuration Release'
    runHealthCheck: false
    setupSlotKeyVaultAccess: true
    deployDevSlot: ${{ parameters.deployDevSlot }}
    appSettingsEnv:
      dev: >-
    runSonarScan: true
    runVulnerabilityScan: false
    sonarExclusionPaths: 'src/*.Api*/**, src/Defra.Trade.ReMoS.AssuranceService.UI.Hosting/Program.cs'
    skipBuildTests: true
    qualityGate: ${{ parameters.qualityGate }}